generator client {
  provider = "prisma-client-js"
  //previewFeatures = ["driverAdapters"]  


}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  role          UserRole        @default(USER)
  accounts      Account[]
  sessions      Session[]
  stripeCustomerId       String?   @unique
  stripeSubscriptionId   String?   @unique  // Add this field
  stripePriceId         String?
  stripeCurrentPeriodEnd DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  metadata      Json?     // Optional JSON column for arbitrary data



  @@map("user") // Map the model to the lowercase table name
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  metadata      Json?     // Optional JSON column for arbitrary data


  @@id([provider, providerAccountId])
  @@map("account") // Map the model to the lowercase table name
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  metadata      Json?     // Optional JSON column for arbitrary data


  @@map("session") // Map the model to the lowercase table name
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_token") // Map the model to the lowercase table name
}

